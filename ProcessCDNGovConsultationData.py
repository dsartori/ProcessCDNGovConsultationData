import os
import petl
import logging as log

log.basicConfig(level=os.environ.get("LOGLEVEL","INFO"))

inputFile='./consultations_open.csv'
try:
    consultationData = petl.fromcsv(inputFile,encoding='utf-8-sig')
except Exception as e:
    log.error(e)

print (consultationData)

consultationData = petl.addfield(consultationData,'Arts',lambda rec: True if 'AA' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Advertising/Marketing',lambda rec: True if 'AD' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Agriculture',lambda rec: True if 'AG' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Amendments',lambda rec: True if 'AM' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Animals',lambda rec: True if 'AN' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Aboriginal peoples',lambda rec: True if 'AP' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Children',lambda rec: True if 'CD' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Communication',lambda rec: True if 'CM' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Copyright/Trademarks/Patents',lambda rec: True if 'CR' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Culture',lambda rec: True if 'CU' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Development',lambda rec: True if 'DV' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Economy',lambda rec: True if 'EC' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Economic development',lambda rec: True if 'ED' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Employment',lambda rec: True if 'EM' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Environment',lambda rec: True if 'EN' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Education',lambda rec: True if 'EU' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Exporting/Importing',lambda rec: True if 'EX' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Financial assistance and entitlements',lambda rec: True if 'FA' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Food and drug',lambda rec: True if 'FD' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Finance',lambda rec: True if 'FI' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Foreign affairs',lambda rec: True if 'FO' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Fisheries',lambda rec: True if 'FS' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Government procurement',lambda rec: True if 'GP' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Housing',lambda rec: True if 'HL' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Heritage',lambda rec: True if 'HP' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Human resources',lambda rec: True if 'HR' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Health',lambda rec: True if 'HS' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Immigration',lambda rec: True if 'IM' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Industry',lambda rec: True if 'IN' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'International',lambda rec: True if 'IT' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Justice and the Law',lambda rec: True if 'JL' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Labour',lambda rec: True if 'LT' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'National Defence',lambda rec: True if 'ND' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Natural Resources',lambda rec: True if 'NR' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Persons with disabilities',lambda rec: True if 'PD' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Plants',lambda rec: True if 'PL' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Policy',lambda rec: True if 'PO' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Private sector',lambda rec: True if 'PR' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Public safety',lambda rec: True if 'PS' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Regulations',lambda rec: True if 'RE' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Recreation',lambda rec: True if 'RL' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Rural and remote services',lambda rec: True if 'RU' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Seniors',lambda rec: True if 'SA' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Service',lambda rec: True if 'SE' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Society',lambda rec: True if 'SO' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Sport',lambda rec: True if 'SP' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Science and technology',lambda rec: True if 'ST' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Trade',lambda rec: True if 'TC' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Training and careers',lambda rec: True if 'TF' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Transportation',lambda rec: True if 'TR' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Taxes',lambda rec: True if 'TX' in rec['subjects'] else False)
consultationData = petl.addfield(consultationData,'Youth',lambda rec: True if 'YJ' in rec['subjects'] else False)

petl.io.csv.tocsv(consultationData,'output.csv',encoding='utf-8')